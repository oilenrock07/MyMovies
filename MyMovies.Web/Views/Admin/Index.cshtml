@model MyMovies.Web.ViewModels.MovieViewModel
@{
    var search = ViewBag.Search ?? "";
}

@section headerstyles
{
    <link href="~/Content/star-rating.css" media="all" rel="stylesheet" type="text/css" />
}

<div id="content" role="main">
    <div class="page-header dark larger larger-desc">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h1>Admin Page</h1>
                    <p class="page-header-desc">Create, edit or delete movie details</p>
                </div>
                <div class="col-md-6">
                    <ol class="breadcrumb">
                        <li><a href="index.html">Admin</a></li>
                        <li class="active">Maintenance</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="container" ng-controller="AdminController">

        @if (TempData["Save"] != null)
        {
            <div class="row">
                <div class="alert alert-success">
                    @TempData["Save"]
                </div>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="row">
                <div class="alert alert-danger">
                    @TempData["Error"]
                </div>
            </div>
        }

        @if (TempData["NoSearchResult"] != null)
        {
            <div class="alert alert-warning fade in alert-dismissable">
                <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
                <strong>No Result Found.</strong>
                @Html.ActionLink("Search", "SearchImdbTitle", new { key = search }) IMDB for match titles?
            </div>
        }

        @if (Model != null && Model.MovieId > 0 && TempData["Save"] == null)
        {
            <div class="alert alert-info fade in alert-dismissable">
                <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
                Movie already exists
                <a href="#filedetail" class="pull-right">File Details</a>
            </div>
        }

        <div class="row">
            <div class="col-md-8">
                @using (Html.BeginForm("Search", "Admin", FormMethod.Get))
                {



                    <div class="input-group">
                        <span class="input-group-btn">
                            <input type="submit" class="btn btn-custom" value="Search" />
                        </span>
                        <input id="AdminSearch" type="text" class="form-control" placeholder="Enter ImdbId Here or Movie Name" name="key" value="@search" select-on-click>
                    </div>
                }
            </div>
        </div>

        @Html.Partial("_MovieForm", Model)
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/star-rating.js"></script>

    <script>

        $('#input-id').on('rating.change', function (event, value, caption) {
            setRemarks();
        });

        var size = '';
        var setRemarks = function () {
            var quality = "";
            switch (parseInt($('#input-id').val())) {
                case 1:
                    quality = 'Very Bad';
                    break;
                case 2:
                    quality = 'Bad';
                    break;
                case 3:
                    quality = 'Not Bad';
                    break;
                case 4:
                    quality = 'Good';
                    break;
                case 5:
                    quality = 'Very Good';
                    break;
                default:
                    quality = 'Very Bad';
            }

            $('#Remarks').val(quality + ' ' + size);
        };

        app.controller('AdminController', function ($http, $scope, $cookies) {
            $scope.fileName = '@(Model.FileName)';
            $scope.fileSize = '@(Model.FileSize)';
            $scope.hdImageLoaded = false;

            $scope.loadHdImage = function (url, imdbId) {
                $http.post('/Admin/GetHdImage', { 'url': url, 'imdbId': imdbId }).then(function (returnUrl) {
                    var hdUrl = returnUrl.data;
                    $('#MoviePoster').attr('src', hdUrl);
                    $('#Poster').val(hdUrl);
                    $('#UpdateImage').click();
                    $scope.hdImageLoaded = true;
                }, function () {

                });
            };

            $scope.setDefaultLocation = function () {
                $cookies.put('DefautLocation', $('#Location').val());
            }

            $scope.setDefaultRemarks = function () {
                var remarks = $('#Remarks').val();
                if (remarks == undefined)
                    remarks = '';
                $cookies.put('DefaultRemarks', remarks);
            }

            $scope.setMovieQuality = function (value) {
                size = value;
                setRemarks();
            };

            $scope.fileChange = function (event) {
                var input = event.target;

                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#MoviePoster').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $scope.getFileDetails = function () {
                var input = $(document.createElement('input'));
                input.attr("type", "file");

                $(input).change(function () {
                    $scope.fileName = $(input)[0].files[0].name;
                    var fileSize = $(input)[0].files[0].size;
                    var ctr = 0;
                    var byteSizes = ["kb", "mb", "gb"];

                    fileSize = parseFloat(fileSize) / 1024;
                    while (fileSize > 1000) {
                        fileSize = fileSize / 1024;
                        ctr++;
                    }

                    $scope.fileSize = fileSize.toFixed(2) + byteSizes[ctr];
                    $scope.$apply();
                    $('#Location').val($cookies.get('DefautLocation'));
                    $('#Remarks').val($cookies.get('DefaultRemarks'));
                });

                input.trigger('click');
                return false;
            }
        });

        app.directive('customOnChange', function () {
            return {
                restrict: 'A',
                link: function (scope, element, attrs) {
                    var onChangeHandler = scope.$eval(attrs.customOnChange);
                    element.bind('change', onChangeHandler);
                }
            };
        });
    </script>

}
