@model MyMovies.Web.ViewModels.BannerAddEditViewModel

<div id="content" role="main" ng-controller="AdminController">
    @if (ViewBag.Error != null)
    {
        <div class="alert alert-danger fade in alert-dismissable">
            <a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>
            @ViewBag.Error
        </div>
    }

    <div class="page-header dark larger larger-desc">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <h1>Banners</h1>
                    <p class="page-header-desc">Update banners to be displayed on Page list</p>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        @using (Html.BeginForm("AddEditBanner", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row">
                <div class="well col-md-12">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TextColor, "Text Color")
                            @Html.TextBoxFor(model => model.TextColor, new { @class = "form-control no-radius" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, "Banner Type")
                            @Html.DropDownListFor(model => model.Type, Model.BannerTypes, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Identifier)
                            @Html.TextBoxFor(model => model.Identifier, new { ng_model="bannerText", @class = "form-control no-radius", placeholder = "Identifier for Banner type" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <input type="file" id="file" value="Upload" accept="image/*" name="MoviePoster" custom-on-change="fileChange" capture="ChangeBackground" style="display: none" />
                    <span class="change-background" ng-click="changeBackGround()">Change Background
                    <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                    </span>
                </div>
                <div class="page-header" style="background: url(@Model.HeaderBg) no-repeat; background-size: 100%; height: 140px; display: block; background-position: center" id="BackGround">
                    <div class="col-md-12">

                        <h2 ng-show="!showTextBox">
                            <div ng-bind="bannerText" ng-click="displayTextBox()" id="BannerDivText" style="color: @Model.TextColor;text-shadow: 2px 2px 4px #000000;"></div>
                        </h2>
                        <input type="text" class="form-control no-radius" ng-model="bannerText" ng-show="showTextBox" ng-blur="showTextBox=!showTextBox" id="BannerText" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.HiddenFor(model => model.BannerId)
                    @Html.HiddenFor(model => model.Poster)
                    <input type="submit" value="Submit" class="btn btn-primary pull-right" />
                </div>
            </div>
        }

    </div>
</div>


@section Scripts {
    <script src="~/Scripts/bootstrap-colorpicker.min.js"></script>
    <script>
        //var app = angular.module('MovieApp', []);
        app.controller('AdminController', function ($scope) {
            $scope.bannerText = '@Model.Identifier';
            $scope.showTextBox = false;

            $scope.changeBackGround = function () {
                setTimeout(function () {
                    document.getElementById('file').click();
                }, 1);
            }

            $scope.displayTextBox = function () {
                $scope.showTextBox = true;
                setTimeout(function () {
                    document.getElementById('BannerText').focus();
                }, 1);
            }

            $scope.fileChange = function (event) {
                var input = event.target;
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        document.getElementById('BackGround').style.backgroundImage = 'url(' + e.target.result + ')';
                        document.getElementById('BackGround').style.backgroundPosition = 'center';
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }
        });

        app.directive('customOnChange', function () {
            return {
                restrict: 'A',
                link: function (scope, element, attrs) {
                    var onChangeHandler = scope.$eval(attrs.customOnChange);
                    element.bind('change', onChangeHandler);
                }
            };
        });

        //Jquery Section
        $(document).ready(function () {
            $('#TextColor').colorpicker();
            $('#TextColor').colorpicker().on('changeColor', function (e) {
                $('#BannerDivText').css("color", e.color.toString('rgba'));
            });
        });
    </script>
}
